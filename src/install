installation_required() {
    if [ "$SCRIPT_PATH" == "$INSTALL_DIR/$EXEC_NAME" ]; then
        return 1
    # Check if already installed
    elif [ -f "$INSTALL_DIR/$EXEC_NAME" ]; then
        return 1
    fi
    return 0
}
install_xtool() {
        debug "Installing xtool..."
        PAYLOAD_START=$(awk '/^__BINARY__/{print NR+1; exit 0;}' "$0")
        tail -n +$PAYLOAD_START "$0" > "$INSTALL_DIR/xtool"
        chmod +x "$INSTALL_DIR/xtool"
}

do_install() {
    debug "Installing..."

    # Prompt user for required information
    INSTALL_DIR=$(prompt_user "Enter installation directory" "$INSTALL_DIR") 
    INSTALL_DIR="${INSTALL_DIR/#\~/$HOME}"  # Expand ~ manually   
    INSTALL_DIR=$(realpath -m "$INSTALL_DIR")
    EXEC_NAME=$(prompt_user "How will you call your agent?" "$EXEC_NAME")
    EXEC_NAME=$(basename "$EXEC_NAME")
    CONFIG_DIR=$(prompt_user "Enter configuration directory" "$CONFIG_DIR")
    CONFIG_DIR="${CONFIG_DIR/#\~/$HOME}"  # Expand ~ manually
    CONFIG_DIR=$(realpath -m  "$CONFIG_DIR")
    echo config dir: $CONFIG_DIR
    mkdir -p "$INSTALL_DIR" && cp "$0" "$INSTALL_DIR/$EXEC_NAME"
    # if failed, prompt:
    if [ $? -ne 0 ]; then
        debug "Failed to install in $INSTALL_DIR/$EXEC_NAME."  
        return 1
    fi

    # Set the vars in the script
    sed -i "s|EXEC_NAME=\"[^\"]*\"|EXEC_NAME=\"$EXEC_NAME\"|" "$INSTALL_DIR/$EXEC_NAME"
    sed -i "s|INSTALL_DIR=\"[^\"]*\"|INSTALL_DIR=\"$INSTALL_DIR\"|" "$INSTALL_DIR/$EXEC_NAME"
    sed -i "s|CONFIG_DIR=\"[^\"]*\"|CONFIG_DIR=\"$CONFIG_DIR\"|" "$INSTALL_DIR/$EXEC_NAME"
    
    # Make executable
    chmod +x "$INSTALL_DIR/$EXEC_NAME"

    # if install path is not in PATH, add it
    if ! echo "$PATH" | grep -q "$INSTALL_DIR"; then
        export PATH=\"$INSTALL_DIR:\$PATH\"

        # Get the proper rc file for the current using shell:
        if [ -n "$ZSH_VERSION" ]; then
            RC_FILE="$HOME/.zshrc"
        elif [ -n "$BASH_VERSION" ]; then
            RC_FILE="$HOME/.bashrc"
        else
            debug "Unsupported shell"
            return 1
        fi
        debug "Adding $INSTALL_DIR to PATH in $RC_FILE"
        echo "export PATH=\"$INSTALL_DIR:\$PATH\"; $EXEC_NAME --start" >> $RC_FILE
    fi

    # Add xtool if not exists:
    if [ ! -x "$(command -v xdotool)" ]; then
        install_xtool
    fi

    # Remove current script and run the new one
    rm "$0"
    exec "$INSTALL_DIR/$EXEC_NAME" "$@"

    info "Done installing, you might need to restart your shell to use it."
    return 0
}

